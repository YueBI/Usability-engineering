Software Architecture Analysis of Usability
软件体系结构的可用性分析

摘要：

  对软件工程项目的研究表明，大量与可用性相关的变更请求是在其部署后提出的。 在开发的后期阶段修复可用性问题通常被证明是成本高昂的。
  这些变更不能被其软件架构轻易地适应。
  因此，可用软件系统的成功开发必须包括创建一个支持适当可用性水平的软件体系结构。
  为了支持软件架构师创建一个支持可用性的软件架构，在架构设计过程中对可用性进行明确的评估。
  
1、引言
  
    许多必要的变更需要对系统进行变更，而软件体系结构不能轻易地适应这些变更。
  
    软件体系结构、体现在其组件中的系统的基本组织、它们彼此之间的关系以及与环境的关系，以及指导其设计和演变的原则不支持所要求的质量水平。
  
    设计阶段产生可用性问题的原因：
    1）可用性需求通常是弱指定的。
    2）可用性需求工程技术只有有限的能力捕捉所有需求。
    3）可用性需求在开发过程中可能会发生变化。
    
    为什么在后期完善可用性问题难度很大：
    1）可用性通常只与界面设计有关，但可用性也依赖于信息架构、交互架构和其他质量属性，这些都是由软件架构决定的 
    2）软件架构不能轻易地适应系统的许多必要的可用性变更。 一些可以提高可用性的改变需要大量的修改
   
    在开发的后期阶段对系统进行重组的成本要比初始开发的成本高出100万数量级，因此必须在早期便考虑可用性问题，与需求、设计作出权衡。
    
    有助于提高人们对软件体系结构在可用性水平上可能存在的限制的认识，本文的贡献是一种评估技术，它帮助软件架构师设计一种支持可用性的软件架构
    称为 SALUTA (基于场景的架构级可用性分析)。
    
2、可用性与软件体系结构的关系
    
    定义了一个表达可用性和软件架构之间关系的框架。
    
  2.1 Usability Attributes
  
    Learnability 易学性 - 容易学习，便于记忆
    Efficiency of use 使用效率 - 每单位时间内用户可以执行的任务数量。
    Reliability 可靠性 - 出错、恢复
    Satisfaction 满意度 - 用户对系统的主观看法。
    
  2.2 Usability Properties
    
    provide_Feedback 提供反馈 —— 系统应该在每一个(适当的)时刻提供反馈
    Consistency 一致性 - 使用者不应怀疑不同的单词、情况、,
      一致性有以下几个方面:
        视觉一致性: 用户界面元素应在方面和结构上保持一致。
        功能一致性: 在整个系统中执行不同任务的方式应该是一致的。
        进化的一致性: 在软件产品族的情况下，产品族的一致性是一个重要方面
    Natural_Mapping  自然映射
    Accessibility  可接受性
    Error_Management  错误处理
    Explicit_user_control  显式用户控制
    Guidance   导航
    Adaptability  适应性
    Minimize_cognitive_load 最小化认知负担
        
 2.3 体系结构可用性模式
 
    可用性模式示例：
      1）Actions on multiple objects 批量操作 -- 操作需要对对象执行，用户可能希望同时对两个或多个对象执行这些操作
      2）Multiple views 多视图 —— 相同的数据和命令必须根据不同的用户喜好、需求，使用不同的人机界面风格潜在地呈现出来。
      3）User profiles 用户适配 —— 该应用程序将由具有不同能力、文化和品味的用户使用
      4) workflow model 工作流程模型
      5) scripting 脚本编写
      6) user modes 用户模式
      7) wizard 
      8) context_sentense_help 上下文帮助
      9）system_feedback 系统反馈
      19）cancel 取消
      20）undo 未处理
      21）history_logging 历史日志
      22）data_validation 数据验证
      23）Emulation 仿真
      24) Multi_channeling 多渠道
      
3、 软件体系结构评估

  本文重点关注：可用性的早期评估
  一种基于场景的评估技术（SALUTA）
  
3.1  Usability Specification 可用性规范

 
   
